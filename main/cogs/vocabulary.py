from types import SimpleNamespace

from cogs.commands import commands_names


class Names(SimpleNamespace):
    def __init__(self, dictionary, **kwargs):
        super().__init__(**kwargs)
        for key, value in dictionary.items():
            if isinstance(value, dict):
                self.__setattr__(key, Names(value))
            else:
                self.__setattr__(key, value)


ru = {
    "cute":      {
        "chatting":         {
            "phrases":    {
                "insults":     [
                    "ботяра пидор", "бот говно", "говно бот", "долбаеб бот", "бот долбаеб", "бот пидор"
                ],
                "compliments": ["бот " + i for i in "ахуенный, классный, крутой, заебатый, милый, пиздатый".split(", ")] + [i + " бот" for i in "ахуенный, классный, крутой, заебатый, милый, "
                                                                                                                                                "пиздатый".split(", ")],
                "sad":         [
                    "грустно", "одиноко", "печально", "горько", "тоскливо", "хуево", "умираю"
                ]
            },
            "embed_cat":  {
                "title":       "Котик :smiling_face_with_3_hearts:",
                "description": "Прямо как ты {}"  # {} - author.mention
            },
            "embed_meme": {
                "title":       "Мем",
                "description": "Мем специально для {}"  # {} - author.mention
            },
            "embed_dog":  {
                "title":       "Песик :smiling_face_with_3_hearts:",
                "description": "Милый как {}"  # {} - author.mention
            },
            "help":       {
                "title":       "SAMURAI",
                "footer":      "INVINCIBLE WARRIORS",
                "description": "Приветствую тебя зайка, мое имя Самурай. Я умный дискорд бот, который добавит много нового на твой сервер и поднимет тебе настроение. Я умею создавать систему "
                               "уровней, повышать пользователей и модерировать участников, поздравлять юзеров с днем рождения в независимости от сервера, создавать партии в крестики-нолики и четыре "
                               "в ряд, а так же принимать в них участие, знаю почти все языки мира и смогу перевести для тебя любое сообщение, расскажу тебе значение любой интересующей тебя вещи, "
                               "а также могу разговаривать на нескольких языках и имею несколько моделей поведения и многое многое другое.\n Ниже ты можешь посмотреть список моих команд"
            },

        },
        "birthdays":        {
            "help":                       {
                "title":       ":sparkling_heart: Помощь по модулю дни рождения :sparkling_heart:",
                "description": ":calendar_spiral: :calendar:",
                "name":        "Команды",
                "value":       f"""**.{commands_names.birthdays.help}** - поможет тебе понять как устроен модуль Birthdays.
**.{commands_names.birthdays.set_chat} <chat>** - указание чата, куда будут прилетать мои поздравления.
**.{commands_names.birthdays.up_chat} <chat>** - обновление чата для поздравлений.
**.{commands_names.birthdays.del_chat}** - удаление чата для поздравлений, **вы не будете получать мои поздравления**.
**.{commands_names.birthdays.show_chat}** - вывод чата, куда будут поступать поздравления.
**.{commands_names.birthdays.add} <year> <month> <day>** - внос в базу данных с указанием года, месяца и дня.
**.{commands_names.birthdays.up} <year> <month> <day>** - обновит текущую дату.
**.{commands_names.birthdays.delete}** - удалит данные из базы.
**.{commands_names.birthdays.show_bd}** - выведет эмбед о вас.
**.{commands_names.birthdays.show_bds}** - выводит список всех дней рождений сервера."""
            },
            "check_birthdays":            {
                "title":       ":tada: День рождения {} :tada:",  # {} - user.name
                "description": "С днем рождения моя сладенькая булочка {}!!! Желаю тебе всего самого наилучшего в этот прекрасный день. А лицо то у тебя какое прекрасное, "  # {} - user.mention 
                               "а умеешь то ты сколько, ебать будь я живой я бы тебя расцеловал реально {}. В общем зайка моя, не расстраивай маму, веди "  # {} - get(self.bot.emojis, name='kavo'
                               "себя хорошо и никогда не забывай про твоего друга {}, я тебя всегда буду любить!!!"  # {} - self.bot.user.mention
            },
            "add_birthday":               {
                "incorrect_date":      [
                    "Некорректная дата, сладенький", "Малыш, ты неправильно ввел дату", "Не обманывай меня, ты не мог тогда родиться", "Ошибся, сладенький, некорректные данные"
                ],
                "date_already_exists": [
                    "Внучок я уже сохранил дату твоего дня рождения - {}. "  # {} - db_date
                    f"Если хочешь изменить внесенные данные, воспользуйся **.{commands_names.birthdays.up}**",
                    "Малыш, я сохранил информацию, что ты родился {}. "  # {} - db_date
                    f"Если хочешь изменить внесенные данные, воспользуйся **.{commands_names.birthdays.up}**",
                    "Зайка, я запомнил, что ты родился {}. "  # {} - db_date
                    f"Если хочешь изменить внесенные данные, воспользуйся **.{commands_names.birthdays.up}**"
                ],
                "success":             [
                    "Запомнил, сладенький. Жди поздравления {}.{} :sparkling_heart:",  # {} - month, {} - day
                    "Обязательно поздравлю тебя {}.{}, калапуська",  # {} - month, {} - day
                    "Кажется я стал любить {}.{} еще больше. Обещаю, что поздравлю тебя сладенький!",  # {} - month, {} - day
                    "Муська моя, жди {}.{} самые теплые слова от меня :sparkling_heart:"  # {} - month, {} - day
                ]
            },
            "add_birthday_error":         {
                "MissingRequiredArgument": [
                    "Зайка, ты указал дату не полностью", "Малыш, неполные данные", "Солнце, ты указал не все данные"
                ],
                "BadArgument":             [
                    "Зайка, не балуйся, неверный формат ввода", "Ошибочные аргументы", "Плохой ввод, солнце, все три параметра - числа", "Ласточка, проверь ввод, все три аргумента - числа"
                ]
            },
            "update_birthday":            {
                "incorrect_date":          [
                    "Некорректная дата, сладенький", "Малыш, ты неправильно ввел дату", "Не обманывай меня, ты не мог тогда родиться", "Ошибся, сладенький, некорректные данные"
                ],
                "date_does_not_exist_yet": [
                    f"Сладенький, я к сожалению не знаю когда ты родился, поэтому не могу обновить отсутствующую информацию. Чтобы внести данные, используй **.{commands_names.birthdays.add}** "
                    "и я поздравлю тебя {}.{}",  # {} - month, {} - day
                    f"Лапочка, мне нечего обновлять, я к сожалению не знаю когда ты родился. Используй **.{commands_names.birthdays.add}**, если хочешь, "
                    "чтобы я поздравил тебя {}.{}"  # {} - month, {} - day
                ],
                "the_same_date":           [
                    "Зайка, я и так запомнил такую же дату", "Малышка, я прекрасно помню что ты родилась в этот день, не обязательно его обновлять",
                    "Сладенький, я и так помню, что ты родился в этот день"
                ],
                "success":                 [
                    "Обновил базу данных", "Такую зайку хоть каждый день поздравляй :smiling_face_with_3_hearts:", "Я отлично запомню и эту дату :kissing_heart:"
                ]
            },
            "update_birthday_error":      {
                "MissingRequiredArgument": [
                    "Зайка, ты указал дату не полностью", "Малыш, неполные данные", "Солнце, ты указал не все данные"
                ],
                "BadArgument":             [
                    "Зайка, не балуйся, неверный формат ввода", "Ошибочные аргументы", "Плохой ввод, солнце, все три параметра - числа", "Ласточка, проверь ввод, все три аргумента - числа"
                ]
            },
            "delete_birthday":            {
                "date_does_not_exist_yet": [
                    "Малыш, я еще не знаю когда ты родился, поэтому мне нечего забывать", "Сладенький, ты еще не вносил данные, мне нечего удалять",
                    "Лапочка, я к сожалению и не знал, когда ты родился, поэтому мне нечего забывать"
                ],
                "success":                 [
                    "Ладно зайка, если ты не хочешь, чтобы я тебя поздравлял, то так мне и надо :sob: :sob: :sob:", "Ты не хочешь, чтобы я тебя поздравлял??? :sob: :sob: :sob:",
                    "Тебе не нужны мои поздравления :cry:", ":cry: Видишь эти слезы? Ты доволен?"
                ]
            },
            "show_birthday":              {
                "date_does_not_exist_yet": [
                    f"Малыш, я еще не знаю когда ты родился, используй **.{commands_names.birthdays.add}**, чтобы внести данные",
                    "Сладенький, ты еще не вносил данные, поэтому я не знаю, когда ты родился :confused:", "Лапочка, я к сожалению и не знал, когда ты родился, поэтому мне нечего выводить"
                ],
                "title":                   ":smiling_face_with_3_hearts: День рождения {} :smiling_face_with_3_hearts:",  # {} - user.name
                "description_start":       [
                    "Этот сладенький пупсик {} родился",
                    "Эта лапопуличка {} родилась",
                    "Этот экстра зайчик {} родился",
                    "Эта сладенькая зайка {} родилась",
                    "Эта муська {} родилась"
                ],  # {} - user.mention
                "description_end":         " **{}**"  # {} - db_date
            },
            "show_birthdays":             {
                "no_info": [
                    "Сладкий, пока никто на сервере не рассказал мне, когда он родился :cry:", "К сожалению, еще никто из вас не рассказал мне, когда родился :cry:",
                    "Я про вас еще ничего не знаю :cry:"
                ],
                "title":   "Дни рождения этого замечательного сервера {}"  # {} - server.name
            },
            "set_chat_birthday":          {
                "chat_already_exist": [
                    "Зайка, поздравления уже приходят в {}. Используй **.{}** или **.{}** для обновления или удаления информации соответственно",  # {} - info_chat, {} - up, {} - delete
                    "Сладенький, я поздравляю вас в {}. Используй **.{}** или **.{}** для обновления или удаления информации соответственно"  # {} - info_chat, {} - up, {} - delete
                ],
                "success":            [
                    "Ждите поздравления в {} мои хорошие :smiling_face_with_3_hearts:",  # {} - chat.mention
                    "Сладкие мои, ждите поздравления в {}",  # {} - chat.mention
                    "Обязательно поздравлю вас в {}",  # {} - chat.mention
                    "Поздравлю всех-всех-всех в этом чате {} :smiling_face_with_3_hearts:"  # {} - chat.mention
                ]
            },
            "set_chat_birthday_error":    {
                "MissingRequiredArgument": [
                    "Зайка, ты не указал чат", "Малыш неполные данные", "Неполные данные, солнце"
                ],
                "BadArgument":             [
                    "Ласточка, неверный формат ввода", "Ошибочные аргументы", "Плохой ввод, малыш, аргументом должен быть текстовый канал",
                    "Сладкий, проверь ввод, это должен быть текстовый чат"
                ]
            },
            "update_chat_birthday":       {
                "chat_does_not_exist_yet": [
                    f'Зайка, мне нечего обновлять, используй **.{commands_names.birthdays.set_chat}**',
                    f'Солнце, у меня нет информации, что обновлять, используй **.{commands_names.birthdays.set_chat}**',
                    f'Малыш, сначала задай чат командой **.{commands_names.birthdays.set_chat}**, а потом уже обновляй данные'
                ],
                "the_same_data":           [
                    "Зайка, я сохранил точно такой же канал", "Солнышко, я запомнил такой же чат", "Малыш, в моей базе данных такие же данные"
                ],
                "success":                 [
                    "Ждите поздравления в {} мои хорошие :smiling_face_with_3_hearts:",  # {} - chat.mention
                    "Сладкие мои, ждите поздравления в {}",  # {} - chat.mention
                    "Обязательно поздравлю вас в {}",  # {} - chat.mention
                    "Поздравлю всех-всех-всех в этом чате {} :smiling_face_with_3_hearts:"  # {} - chat.mention
                ]
            },
            "update_chat_birthday_error": {
                "MissingRequiredArgument": [
                    "Зайка, ты не указал чат", "Малыш неполные данные", "Неполные данные, солнце"
                ],
                "BadArgument":             [
                    "Ласточка, неверный формат ввода", "Ошибочные аргументы", "Плохой ввод, малыш, аргументом должен быть текстовый канал",
                    "Сладкий, проверь ввод, это должен быть текстовый чат"
                ]
            },
            "delete_chat_birthday":       {
                "chat_does_not_exist_yet": [
                    f'Зайка, мне нечего удалять, используй **.{commands_names.birthdays.set_chat}**',
                    f'Солнце, у меня нет информации, что удалять, используй **.{commands_names.birthdays.set_chat}**',
                    f'Малыш, сначала задай чат командой **.{commands_names.birthdays.set_chat}**, а потом уже удаляй данны'
                ],
                "success":                 [
                    "Ладно зайки, если вы не хотите, чтобы я вас поздравлял, то так мне и надо :sob: :sob: :sob:", "Вы не хотите, чтобы я вас поздравлял??? :sob: :sob: :sob:",
                    "Вам не нужны мои поздравления :cry:", ":cry: Видите эти слезы? Вы довольны?"
                ]
            },
            "show_chat_birthdays":        {
                "no_info": [
                    f'Зайка, я не знаю куда отправлять поздравления, используй **.{commands_names.birthdays.set_chat}**',
                    f'Солнце, у меня нет информации,  используй **.{commands_names.birthdays.set_chat}**',
                    f'Малыш, сначала задай чат командой **.{commands_names.birthdays.set_chat}**'
                ],
                "success": [
                    "Мои хорошие, вы сможете увидеть мои поздравления в {}",  # {} - info_chat
                    "Ждите своих дней рождений и получайте самые лучшие слова от меня в {}"  # {} - info_chat
                ]
            }
        },
        "level_system":     {
            "help":                      {
                "title":       "Информации о системе уровней",
                "description": ":bar_chart: :chart_with_upwards_trend: :chart_with_downwards_trend:",
                "name":        "Команды",
                "value":       f"""**.{commands_names.level.help}** - поможет тебе понять как устроен модуль LevelSystem.
**.{commands_names.level.add} <role> <xp>** - внос в базу данных с указанием роли и количество опыта для ее получения.
**.{commands_names.level.up} <role> <xp>** - обновит данную роль.
**.{commands_names.level.delete}** - удалит роль из базы данных.
**.{commands_names.level.show_levels}** - выведет список всех уровней сервера и количество опыта для их получения.
**.{commands_names.level.show_level}** - выведет эмбед о вашем уровне.
**.{commands_names.level.dashboard}** - выведет топ участников сервера."""
            },
            "check_level_up":            {
                "title":             ":chart_with_upwards_trend: LEVEL UP :chart_with_upwards_trend:",
                "description_start": [
                    "Сладкий {} заслужил повышение!!!",
                    "Лапочка {} стала еще более уважаемой",
                    "Поздравляю с повышением, {}"
                ],  # {} - user.mention
                "description_end":   "\n**level - {}\nxp - {}**"  # {} - role.mention, {} - user_xp
            },
            "level_add":                 {
                "the_same_data_start": [
                    "Сладкий, такой уровень уже есть.", "Лапочка, в базе уже есть такой уровень.", "Малыш, у меня уже есть такой уровень."
                ],
                "the_same_data_end":   f" Используй **.{commands_names.level.up}** чтобы обновить уровень или **.{commands_names.level.delete}** чтобы удалить роль",
                "success":             [
                    "Успешно добавил уровень {} в базу данных",  # {} - role.mention
                    "Сладенький, добавил уровень {} в базу данных",  # {} - role.mention
                    "Записал уровень {} в базу данных"  # {} - role.mention
                ]
            },
            "level_update":              {
                "level_does_not_exist_start": [
                    "Малыш, чтобы обновлять роль, ее сначала нужно создать.", "Сладенький, мне нечего обновлять.", "Пупсик, я не знаю такой уровень."
                ],
                "level_does_not_exist_end":   f" Используй **.{commands_names.level.add}**, чтобы создать роль",
                "the_same_data":              [
                    "Муська, у этого уровня {} и так такое же количество опыта",  # {} - role.mention
                    "В базе данных те же значения об уровне {}"  # {} - role.mention
                ],
                "success_start":              [
                    "Сладенький, успешно обновил уровень.", "Изменил уровень, зайка.", "Обновил данные."
                ],
                "success_end":                " Теперь для получения {} необходимо **{}**"  # {} - role.mention, {} -level_xp
            },
            "level_add_or_update_error": {
                "MissingPermissions":      [
                    "Сладкий, у тебя нет прав на редактирование уровней", "Малыш, ты не можешь менять уровни", "Солнышко, тебе нельзя менять уровни"
                ],
                "MissingRequiredArgument": [
                    "Зайка мне нужна роль и количество опыта, чтобы ее получить", "Малыш сюда надо роль и количество опыта"
                ],
                "RoleNotFound":            [
                    "Сладенький, такой уровень не найден", "Пупсик, я не смог найти такой уровень"
                ],
                "BadArgument":             [
                    "Неверные типы данных", "Зайка, тебе нужно ввести только роль и количество опыта", "Неверные аргументы"
                ]
            },
            "level_delete":              {
                "level_does_not_exist_start": [
                    "Малыш, чтобы удалять роль, ее сначала нужно создать.", "Сладенький, мне нечего удалять.", "Пупсик, я не знаю такой уровень."
                ],
                "level_does_not_exist_end":   f" Используй **.{commands_names.level.add}**, чтобы создать роль",
                "success":                    [
                    "Успешно удалил уровень {}",  # {} - role.mention
                    "Удалил {} из базы уровней"  # {} - role.mention
                ]
            },
            "level_delete_error":        {
                "MissingPermissions":      [
                    "Сладкий, у тебя нет прав на редактирование уровней", "Малыш, ты не можешь менять уровни", "Солнышко, тебе нельзя менять уровни"
                ],
                "MissingRequiredArgument": [
                    "Зайка мне нужна только роль", "Малыш, здесь необходима только роль"
                ],
                "RoleNotFound":            [
                    "Сладенький, такой уровень не найден", "Пупсик, я не смог найти такой уровень"
                ],
                "BadArgument":             [
                    "Неверные типы данных", "Зайка, тебе нужно ввести только роль", "Неверные аргументы"
                ]
            },
            "level_show":                {
                "no_info": [
                    "Информации пока нет :pensive:", "Информации отсутствует :pensive:"
                ],
                "title":   "УРОВНИ {}",  # {} - server.name
                "footer":  "1xp = 1 сообщение"
            },
            "level":                     {
                "no_info":           [
                    "Малыш, на сервере к сожалению пока нет системы уровней", "Зайка, на этом сервере нет системы уровней", "Система уровней отсутствует"
                ],
                "no_level":          "уровня нет(",
                "title":             "УРОВЕНЬ {}",  # {} - user.name
                "description_start": ["Пуси цунами от этой зайки!!!", "Супер экстра пупсик!"],
                "description_end":   " {}\n**level - {}\nxp - {}**"  # {} - user.mention, {} - db_user_level, {} - db_user_xp
            },
            "level_dashboard":           {
                "no_info":           [
                    "Малыш, на сервере к сожалению пока нет системы уровней", "Зайка, на этом сервере нет системы уровней", "Система уровней отсутствует"
                ],
                "title":             "{} - ТАБЛИЦА УЧАСТНИКОВ",
                "no_level":          "уровня нет(",
                "top_three_phrases": {
                    "1": [
                        "Нереальная зайка на первом!", "Солнышко мое на первом месте", "Мой любимый"
                    ],
                    "2": [
                        "Сладкая булочка на втором", "Великолепный человек на втором", "Мамина радость на втором"
                    ],
                    "3": [
                        "Лапочка на третьем месте", "На третьем, потому что первые два слишком мало", "Гордость семьи"
                    ]
                },
                "embed_field_title": [
                    "Не менее крутые пупсики", "Не менее сладкие зайки", "Сопоставимые по крутости"
                ]
            }
        },
        "tic_tac_toe_game": {
            "game_help": {
                "title":       "Информация о модуле крестики - нолики",
                "description": ":negative_squared_cross_mark: :o2:",
                "name":        "Команды",
                "value":       f"""Модуль с крестиками-ноликами для игр с друзьями или мной
**.{commands_names.tic_tac_toe.game_help}** - отдельный эмбед для вывода инфы о крестиках ноликах
**.{commands_names.tic_tac_toe.rules}** - отдельный эмбед для вывода правил крестиков ноликов
**.{commands_names.tic_tac_toe.init_game} <member1> <member2>** - начало игры с указанием двух юзеров
**.{commands_names.tic_tac_toe.place} <number>** - поместит нужный символ в клетку
:one: :two: :three:
:four: :five: :six:
:seven: :eight: :nine:
**.{commands_names.tic_tac_toe.lose}** - текущий игрок сдастся"""
            },
            "rules":     {
                "title":       "Правила игры крестики - нолики",
                "description": ":negative_squared_cross_mark: :o2:",
                "value":       "Игроки по очереди ставят на свободные клетки поля 3х3 знаки (один всегда крестики, другой всегда нолики). Первый, выстроивший в ряд 3 своих фигуры по вертикали, "
                               "горизонтали или диагонали, выигрывает. Первый ход делает игрок, ставящий крестики.\n Обычно по завершении партии выигравшая сторона зачёркивает чертой свои три знака "
                               "(нолика или крестика), составляющих сплошной ряд.\n"
            },
            "init_game": {
                "game_does_not_over":    [
                    "Малыш, еще идет игра", "На этом сервере еще идет игра", "Зайка, подожди пока закончится текущая игра"
                ],
                "author_not_in_players": [
                    "Солнышко, ты не можешь создавать лобби, не участвуя в нем", "Зайка, чтобы создать лобби, ты должен быть его участником"
                ],
                "p1_equals_p2":          [
                    "Солнышко, участники не могут играть сами с собой", "Малыш, я думаю глупо играть с самим собой", "Зайка, не стоит играть с самим собой"
                ],
                "incorrect_game_type":   [
                    "Зайка, типом игры может быть только 1 и 2", "Малыш, ты указал неверный тип игры, введи значение 1 или 2",
                    "Солнышко, я умею играть либо как профессионал, либо рандомно, значения 1 и 2 соответственно. Введи данные еще раз "
                ],
                "p_vs_other_bot":        [
                    "Зачем ты обижаешь моего братика, он к сожалению еще не научился играть, но это не повод над ним смеяться.",
                    "Ха-Ха смешно, издевается он над бедным ботом, а симфонию ты написать сможешь?",
                    "Так просто обидеть машину, ты не думал, что ему может обидно? Подумаешь не умеет играть, но я его в обиду не дам. Вызови меня на бой и я покажу тебе как ботов обижать"
                ],
                "success":               "Игра для {} и {} была создана. Тип игры: **{}**"  # {} - player1.mention, {} - player2.mention, {} - self.game_types[game_type]
            }
        },
        "mini_cogs":        {
            "help":               {
                "title": "Помощь по мини-командам",
                "name":  "Команды",
                "value": f"""**.{commands_names.mini_cogs.help}** - поможет тебе понять как работают мини-модули
**.{commands_names.mini_cogs.head_or_tails}** - подкинет монетку
**.{commands_names.mini_cogs.magic_ball} <question>** - даст судьбоносное ответ на твой вопрос
**.{commands_names.mini_cogs.get_forecast} <place>** - выведет прогноз погоды в указанном месте
**.{commands_names.mini_cogs.get_quote}** - вдохновит тебя на грядущий день"""
            },
            "heads_or_tails":     [
                ":bird: Орел :bird:", ":coin: Решка :coin:"
            ],
            "magic_ball":         {
                "title_start": ":crystal_ball: говорит: ",
                "title_end":   ['да', 'нет', 'возможно', 'я не знаю', 'скорее всего да', 'скорее всего нет', 'зайка, абсолютно уверен, что нет', '50/50', 'солнышко, абсолютно уверен, что да'],
                "footer":      "Вопрос: {}"  # {} - message
            },
            "get_forecast":       {
                "lang":        "ru",
                "error":       ["Зайка, я к сожалению не нашел информацию", "Солнышко, прости, но я ничего не нашел("],
                "title":       "Погода в {}",  # {} - place
                "description": "В {} сейчас {}°С, {}"  # {} - place, {} - response['main']['temp'], {} - {response['weather'][0]['description']}
            },
            "get_forecast_error": {
                "MissingRequiredArgument": [
                    "Солнышко, ты не указал место", "Зайка, ты не написал в каком месте", "Лапочка моя, в каком месте тебе интересен прогноз?"
                ],
                "BadArgument":             [
                    "Солнышко мое среди тучек, ты ввел неверные данные", "Радость моя, ты ввел неправильное значение"
                ]
            },
            "get_quote":          {
                "target": "ru",
                "title":  "Вдохновение для моей крошки",
                "footer": "Оригинал: {}"  # {} - quote
            }
        },
        "music_player":     {
            "help": {
                "title":       "Помощь по музыкальному модулю",
                "description": ":track_previous: :stop_button: :play_pause:",
                "name":        "Команды",
                "value":       f"""Этот модуль был создан, чтобы ты мог отдыхать со своими друзьями в голосовом канале и параллельно слушать любимую музыку
**.{commands_names.music_player.help}** - отдельный эмбед для вывода помощи по плэеру
**.{commands_names.music_player.join}** - зайду в голосовой канала, в котором находится автор сообщения.
**.{commands_names.music_player.leave}** - уйду из голосового канала
**.{commands_names.music_player.queue}** - выведу очередь треков
**.{commands_names.music_player.queue} <url>** - добавлю в очередь трек
**.{commands_names.music_player.remove} <number>** - удалю трек под номером <number>
**.{commands_names.music_player.play}** - начну играть музыку из очереди
**.{commands_names.music_player.pause}** - поставлю на паузу воспроизведение
**.{commands_names.music_player.resume}** - начну воспроизведение
**.{commands_names.music_player.stop}** - уберу трек из очереди и остановлю проигрывание"""
            }
        },
        "translator":       {
            "help":                         {
                "title":       "Помощь по модулю Переводчик",
                "description": ":u6307: :left_right_arrow: :regional_indicator_a:",
                "name":        "Команды",
                "value":       f"""Я смогу перевести все что ты захочешь с любого на любой язык, определить язык тоже не проблема. Также можем поиграть в игру угадай язык.
**.{commands_names.translator.help}** - помогу тебе отдельным эмбедом со всеми командами
**.{commands_names.translator.languages_list}** - в следующих командах и играх ты должен будешь вводить язык и для упрощения я ввел систему кратких обозначений, эта команда выведет их
**.{commands_names.translator.translate} <source lang> <target lang> <message>** - переведу фразу с исходного языка на итоговый
**.{commands_names.translator.translate} <target lang> <message>** - сам определю исходный язык и переведу тебе все на указанный язык (иногда могу ошибаться, тогда юзай команду выше)
**.{commands_names.translator.detect_language} <message>** - выведу тебе язык исходного сообщения
**.{commands_names.translator.game_detect_languages}** - начну игру "угадай язык" и буду ждать твоего ответа"""
            },
            "translate":                    {
                "no_words":               [
                    "Зайка, ты не указал, что переводить", "Малыш, какую фразу нужно перевести?", "Зайчонок мой, я не знаю, что ты хочешь перевести"
                ],
                "no_words_plus_language": [
                    "Ласточка, спасибо, что указал на какой язык переводить, только ты не указал сообщение для перевода", "Птичка моя, я понял, на какой язык нужно переводить, но что именно нет",
                    "Сладкий мой, на какой язык переводить понятно, а какое сообщение не очень"
                ],
                "word_without_language":  [
                    "Котик мой, слово классное, только на какой язык его перевести", "Зайчонок мой, спасибо тебе за слово, только на какой язык его перевести",
                    "Зайка, на какой язык мне перевести это слово"
                ],
                "only_languages":         [
                    "Куда и откуда я понял, но что переводить, зайка моя", "Спасибо, что указал языки, но ты забыл указать сообщение"
                ],
                "no_languages":           [
                    "Солнышко, ты не указал тег языка", "Зайчик, я не смогу перевести сообщение, пока не узнаю, какой язык тебе нужен"
                ],
                "title":                  ":loudspeaker: Перевод :loudspeaker:",
                "footer":                 "Оригинал: {}"  # {} - message
            },
            "detect_language":              {
                "title": ":notebook_with_decorative_cover: Язык :ledger:"
            },
            "language_list":                {
                "title": ":a: Список кратких обозначений языков :b:"
            },
            "what_the_language_game":       {
                "active_game": [
                    "Зайка, на сервере уже есть игра, поторопись угадать язык", "Солнышко, на сервере уже есть активная игра, закончи ее, а потом можешь начинать новую",
                    "Малыш, на сервере уже есть активная игра"
                ],
                "title":       ":question: Какой язык :question:",
                "tries":       "Попыток осталось: {}",  # {} - counter
                "win":         [
                    "Поздравляю с победой, сладенький мой!", "Ты угадал язык, молодей мой", "Ты супер пупсик, все правильно угадал"
                ],
                "lose_start":  [
                    "Попытки кончились, ты проиграл зайка(", "К сожалению ты проиграл зайка.", "Попытки кончились, ты проиграл мой сладенький.", "Поражение("
                ],
                "lose_end":    " Верный ответ: {} - {}"  # {} - language, {} - self.google_translator_keys[language]
            },
            "what_the_language_game_error": {
                "TimeoutError": [
                    "Зайчик, к сожалению время вышло. Ты проиграл(((", "Время истекло, ты проиграл", "К сожалению ты проиграл, зайка, время вышло"
                ]
            }
        },
        "wikipedia":        {
            "wikipedia_search":       {
                "description_about_me": [
                    "Зайка моя, про меня к сожалению нет википедии, зато есть [сайт]({})",
                    "Ласточка моя, википедии про меня пока нет, но ты можешь посмотреть [сайт обо мне]({})",
                ],  # {} - site
                "error":                [
                    "Зайка моя, к сожалению я ничего не нашел", "Прости меня, лапочка, но я ничего не смог найти", "Солнце мое, ничего не смог найти по данному запросу"
                ]
            },
            "wikipedia_search_error": {
                "MissingRequiredArgument": [
                    "Солнышко, ты не написал, что мне искать", "Зайка, что хочешь узнать?", "Ласточка, напиши что ты хочешь узнать"
                ],
                "BadArgument":             [
                    "Зайка, я могу делать запросы только по строке", "Малышка, я умею делать запросы только по строкам"
                ]
            }
        },
        "glossary":         {
            "help":         {
                "title":          "Информация о модуле Глоссарий",
                "description":    ":u7981: :smiling_face_with_3_hearts: :face_with_monocle: :face_with_symbols_over_mouth:",
                "name":           "Команды",
                "value":          f"""**.{commands_names.glossary.help}** - поможет понять как устроен модуль Глоссарий
**.{commands_names.glossary.view_status}** - выведет речевые настройки сервера
**.{commands_names.glossary.set_language} <language>** - изменит язык бота на указанный
**.{commands_names.glossary.set_vibe} <vibe>** - изменит настроение бота на указанное""",
                "language_field": {
                    "name": "Языки"
                },
                "vibe_field":     {
                    "name": "Настроения"
                }
            },
            "view_status":  {
                "title":       "Мои речевые настройки на сервере {}",  # {} - ctx.guild.name
                "description": "**Язык:** {} :flag_{}:\n**Стиль речи:** {}"  # {} - language x2, {} - vibe
            },
            "set_language": {
                "incorrect_language": [
                    "Зайка, я знаю только эти языки: **{}**", "Лапочка, я умею разговаривать только на **{}**", "Солнышко, в моей базе данных присутствуют только эти языки: **{}**"
                ],  # {} - vocabulary.keys()
                "success":            [
                    "Солнышко, успешно изменил язык", "Алоха, то есть здравствуйте", "Встречайте русского Самурая"
                ]
            },
            "set_vibe":     {
                "incorrect_vibe": [
                    "Зайка, у меня есть только такие модели поведения: **{}**", "Лапочка, я могу быть только **{}**", "Солнышко, мой создатель научил меня только этим моделям поведения: **{}**"
                ],  # {} - vocabulary[current_language(ctx.guild.id)].__dict__.keys()
                "success":        [
                    "Солнышко, успешно изменил стиль общения", "Блин, так я вас люблю зайки", "Обожаю каждого участника этого прекрасного сервера"
                ]
            },
        }
    },
    "gentleman": {

    },
    "rude":      {

    }
}

en = {
    "cute":      {
        "glossary": {
            "view_status":  {
                "title":       "My config on {}",  # {} - ctx.guild.name
                "description": "**Language:** {} :flag_{}:\n**Speech style:** {}"  # {} - language x2, {} - vibe
            },
            "set_language": {
                "success": [
                    "Buenos días, pardon me ... Wassup", "How are u doing guys", "Meet the english Samurai"
                ]
            }
        }
    },
    "gentleman": {

    },
    "rude":      {

    }
}

vocabulary = {}
vocabulary.update({"ru": Names(ru)})
vocabulary.update({"en": Names(en)})
